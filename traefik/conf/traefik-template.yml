## STATIC CONFIG (restart traefik to update)

# shows you a log msg if a newer image tag can be used
global:
  checkNewVersion: true

# log default is ERROR, but WARN is more helpful
log:
  level: WARN
  # level: INFO

# enable dashboard on 8080 with auth
api:
  insecure: true
  dashboard: true

# enable ping so the `traefik healthcheck` works
ping: {}

# auto-proxy containers if they have proper labels
# and also use this file for dynamic config (tls)
providers:
  docker:
    exposedByDefault: false
    watch: true
  file:
    fileName: /traefik.yml
    watch: true

http:
  middlewares:
    home-whitelist:
      ipWhiteList:
        sourceRange:
          - "127.0.0.1/32"
          - "192.168.1.0/24"

# listen on 80/443, and redirect all 80 to 443 via 301
entryPoints:
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true
  websecure:
    address: :443

certificatesResolvers:
  letsEncrypt:
    acme:
      email: CLOUDFLARE_EMAIL
      storage: acme.json
      dnsChallenge:
        provider: cloudflare
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.2:53"
        # used during the challenge
## DYNAMIC CONFIG

# tls:
#   certificates:
#     - certFile: /certs/DOMAIN_NAME.crt
#       keyFile: /certs/DOMAIN_NAME.key
#   stores:
#     default:
#       defaultCertificate:
#         certFile: /certs/DOMAIN_NAME.crt
#         keyFile: /certs/DOMAIN_NAME.key
# when testing certs, enable this so traefik doesn't use 
# it's own self signed. By default if it can't find a matching
# cert, it'll just create it's own which will cause cert warnings
# in browser
  # options:
    # default:
      # sniStrict: true
